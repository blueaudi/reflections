What happens when you initialize a repository? Why do you need to do it?

	A .git directory is created containing files/folders necessary to
	provide version tracking.  This creates the framework git requires
	for tracking.

How is the staging area different from the working directory and the
repository?  What value do you think it offers?

	The staging area contains those files in the working directory that
	we want to be contained in the commit.  This allows the segregation
	of files in the working directory that will be included in the commit
	and those that will not.

How can you use the staging area to make sure you have one commit per
logical change?

	Ummmmmmmmm?  I don't know the answer to this one!

What are some situations when branches would be helpful in keeping your
history organized? How would branches help?

	Branches might be helpful when major, experimental changes are being
	made to a project, while improvements to the main branch can still
	be made and committed.  At some future point, the branches can be
	merged if desired.

How do the diagrams help you visualize the branch structure?

	Diagrams visually delineate how the various commits and branches are
	related.

What is the result of merging two branches together? Why do we represent
it in the diagram the way we do?

	When two branches are merged, the code in the two branches is combined
	to reflect the various additions and deletions made.  It is shown on
	the branch diagram with both branches as the parents of the new node.
	
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	Automatic merging identifies potential conflicts automatically and
	notifies the user.  It may, however, merge the changes improperly.
	Manual merging requires more human interaction, which can also
	introduce errors.